@page "/"

@using System.Threading;
@using IEvangelist.Blazing.SignalR.Client.Models
@using IEvangelist.Blazing.SignalR.Client.Services

@inject ITwitterStreamService StreamService

@if (_tweets == null)
{
    <p><em>Waiting for tweet stream to start...</em></p>
}
else
{
    <div id="tweets">
        <ul>
            @foreach (var tweet in _tweets)
            {
                var tweetHTml = new MarkupString(tweet.HTML);
                <li>@tweetHTml</li>
            }
        </ul>
    </div>
}

@functions {
    readonly List<TweetResult> _tweets = new List<TweetResult>();
    readonly CancellationTokenSource _cts = new CancellationTokenSource();

    protected override async Task OnInitAsync()
    {
        await StreamService.SubscribeAsync(OnTweetReceived);
    }

    async Task OnTweetReceived(TweetResult tweet)
    {
        _tweets.Add(tweet);
        StateHasChanged();

        await Task.CompletedTask;
    }
}