@page "/"

@using System.Threading;
@using IEvangelist.Blazing.SignalR.Client.Models
@using IEvangelist.Blazing.SignalR.Client.Services

@inject ITwitterStreamService StreamService

<button class="btn btn-primary" onclick="">
    <span class="oi oi-media-play"></span> Start
</button>
<button class="btn btn-primary" onclick="">
    <span class="oi oi-media-stop"></span> Stop
</button>
<button class="btn btn-primary" onclick="">
    <span class="oi oi-media-pause"></span> Pause
</button>

@if (_tweets?.Any() ?? false)
{
    <div id="tweets">
        <ul>
            @foreach (var tweet in _tweets)
            {
                var tweetHTml = new MarkupString(tweet.HTML);
                <li>@tweetHTml</li>
            }
        </ul>
    </div>
}
else
{
    <p><em>Waiting for tweets...</em></p>
}

@functions {
readonly List<TweetResult> _tweets = new List<TweetResult>();
readonly CancellationTokenSource _cts = new CancellationTokenSource();

protected override async Task OnInitAsync()
{
    await StreamService.SubscribeAsync(OnTweetReceived);
}

async Task OnTweetReceived(TweetResult tweet)
{
    _tweets.Add(tweet);
    StateHasChanged();

    await Task.CompletedTask;
}
}